#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u4E0D\u5305\u542B\u4F4D %d \u4F4D\u4E8E\u53D8\u91CF '%s'\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvDuplicatedBit = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u5305\u542B\u4E24\u4E2A\u4F4D %d \u4F4D\u4E8E\u53D8\u91CF '%s'\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvDuplicatedVar = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u5305\u542B\u591A\u4E2A\u53D8\u91CF '%s'\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvIncorrectBitOrder = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u5305\u542B\u53D8\u91CF '%s' \u7684\u9519\u8BEF\u4F4D\u5E8F\u5217\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvIncorrectEmpty = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u5728\u4F4D\u7F6E %d \u5305\u542B\u4E00\u4E2A\u9519\u8BEF\u7684\u7A7A\u5B57\u6BB5\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvIncorrectLine = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u6709 %d \u4E2A\u6761\u76EE\u800C\u4E0D\u662F\u6240\u9700\u8981\u7684 %d \u6761\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvIncorrectVarName = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u5305\u542B\u9519\u8BEF\u7684\u683C\u5F0F\u5316\u6807\u7B7E '%s'\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvInvalidEntry = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u5305\u542B\u65E0\u6548\u6761\u76EE '%s' \u4F4D\u4E8E\u5B57\u6BB5 %d\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvNoInputsFound = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u4E0D\u5305\u542B\u4EFB\u4F55\u8F93\u5165\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvNoSepFound = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u5305\u542B\u672A\u5206\u9694\u7684\u5B57\u6BB5\uFF0C\u820D\u5F03\u66F4\u6539\u3002
CsvNotEnoughEmpty = csv\u6587\u4EF6\u7684\u7B2C%d\u884C '%s' \u6CA1\u6709\u8DB3\u591F\u7684\u7A7A\u5B57\u6BB5\u4F4D\u4E8E\u53D8\u91CF '%s' \u4E4B\u540E\uFF0C\u820D\u5F03\u66F4\u6539\u3002
#
# data/ExpressionRenderData.java
#
expressionEmpty = (empty)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = english
latexEmpty = Empty analyzer
latexEmptyText = As the analyzer did not have input variables and/or output variables at the moment this document was generated there is nothing to show.
latexHeader = Logisim-evolution generated document on %s
latexIntroduction = Introduction
latexIntroductionText = This document was generated by logisim-evolution. Any part of the TeX sources can be used in your own documents without any problems. In case you want to use all/parts of this generated TeX-sources please (1) do not forget to include the required packages, and (2) include a remark that this source was generated by logisim-evolution.
latexKarnaugh = Karnaugh diagrams
latexKarnaughEmpty = Empty Karnaugh diagrams
latexKarnaughFilledIn = Filled in Karnaugh diagrams
latexKarnaughFilledInGroups = Filled in Karnaugh diagrams with covers
latexKarnaughText = This section shows various versions of the Karnaugh diagrams of the given functions.
latexKarnaughToBig = Cannot display Karnaugh diagrams with more than %d input vars.
latexMinimal = Minimal expressions
latexTruthTable = Truth table
latexTruthTableComlete = Complete truth table
latexTruthTableCompact = Compacted truth table
latexTruthTableText = The table may be way to big to be displayed on the page. At generation time no calculation was done on the size of the table with respect to the width/height of the page.
latexTruthTableToBig = \\\\~\\\\The truth table has more than %d entries, it makes no sense to show it here.
tableLatexFilter = Logisim-evolution TeX \u6587\u6863 (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Logisim-evolution \u771F\u503C\u8868 (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Ignore errors and try again?
tableParseErrorTitle = Error Parsing Truth Table
tableRemark1 = # Truth table
tableRemark2 = # Generated from circuit %s
tableRemark3 = # Exported on %s
tableRemark4 = # Hints and Notes on Formatting:%n# * You can edit this file then import it back into Logisim!%n# * Anything after a '#' is a comment and will be ignored.%n# * Blank lines and separator lines (e.g., ~~~~~~) are ignored.%n# * Keep column names simple (no spaces, punctuation, etc.)%n# * 'Name[N..0]' indicates an N+1 bit variable, whereas%n#   'Name' by itself indicates a 1-bit variable.%n# * You can use 'x' or '-' to indicate %"don't care%" for both%n#   input and output bits.%n# * You can use binary (e.g., '10100011xxxx') notation or%n#   or hex (e.g., 'C3x'). Logisim will figure out which is which.
tableTxtFileFilter = Logisim-evolution Truth Table (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = \u8BF7\u7A0D\u5019
analyzerWindowTitle = \u7EC4\u5408\u7535\u8DEF\u5206\u6790
buildCircuitButton = \u751F\u6210\u7535\u8DEF
exportLatexButton = \u5BFC\u51FA TeX
exportTableButton = \u5BFC\u51FA\u771F\u503C\u8868
expressionTab = \u8868\u8FBE\u5F0F
expressionTabTip = \u67E5\u770B\u5E76\u4FEE\u6539\u8F93\u51FA\u8868\u8FBE\u5F0F\u3002
importTableButton = \u5BFC\u5165\u771F\u503C\u8868
inputsOutputsTab = \u8F93\u5165\u4E0E\u8F93\u51FA
inputsOutputsTabTip = \u67E5\u770B\u5E76\u7F16\u8F91\u8F93\u5165\u4E0E\u8F93\u51FA\u53D8\u91CF\u96C6\u3002
minimizedTab = \u6700\u5C0F\u9879
minimizedTabTip = \u67E5\u770B\u5BF9\u5E94\u771F\u503C\u8868\u7684\u6700\u7B80\u8868\u8FBE\u5F0F\u3002
tableTab = \u771F\u503C\u8868
tableTabTip = \u67E5\u770B\u5E76\u4FEE\u6539\u771F\u503C\u8868\u3002
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = \u786E\u8BA4\u8981\u66FF\u6362\u7535\u8DEF %s \u5417?
buildConfirmReplaceTitle = \u786E\u8BA4\u66FF\u6362
buildDialogErrorTitle = \u65E0\u6CD5\u751F\u6210\u7535\u8DEF
buildDialogTitle = \u751F\u6210\u7535\u8DEF
buildDuplicatedNameError = \u7535\u8DEF\u540D\u79F0\u4E0D\u80FD\u4E0E\u8F93\u5165\u6216\u8F93\u51FA\u7684\u540D\u79F0\u76F8\u540C\u3002\u8BF7\u6307\u5B9A\u4E00\u4E2A\u5176\u4ED6\u540D\u79F0\u3002
buildNameLabel = \u7535\u8DEF\u540D\u79F0:
buildNandsLabel = \u4EC5\u4F7F\u7528\u4E0E\u975E\u95E8\uFF08NAND\uFF09
buildNeedCircuitError = \u4F60\u5FC5\u987B\u5236\u5B9A\u4E00\u4E2A\u7535\u8DEF\u540D\u79F0\u3002
buildNeedProjectError = \u4F60\u5FC5\u987B\u9009\u62E9\u4E00\u4E2A\u76EE\u6807\u9879\u76EE\u3002
buildProjectLabel = \u76EE\u6807\u9879\u76EE:
buildTwoInputsLabel = \u4EC5\u4F7F\u7528\u4E8C\u8F93\u5165\u95E8
replaceCircuitAction = \u66FF\u6362\u7535\u8DEF
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = \u7EE7\u7EED
cvsFilePreview = \u8BFB\u5165\u6587\u4EF6\u7684\u524D\u56DB\u884C\u9884\u89C8\uFF1A
seperatorSpace = {space}
SeperatorTab = {tab}
UsedQuotesInFile = \u9009\u62E9CSV\u6587\u4EF6\u4F7F\u7528\u7684\u5F15\u53F7\u7B26\uFF1A
UsedSeperatorInFile = \u9009\u62E9CSV\u6587\u4EF6\u4F7F\u7528\u7684\u5206\u9694\u7B26\uFF1A
#
# gui/ExportLatexButton.java
#
cantWriteMessage = \u65E0\u6CD5\u5199\u5165\u6587\u4EF6\uFF1A%s
confirmOverwriteMessage = \u4F60\u786E\u5B9A\u8981\u8986\u76D6\u6587\u4EF6 %s?
confirmOverwriteTitle = \u786E\u5B9A\u8986\u76D6
notFileMessage = \u4E0D\u662F\u6709\u6548\u7684\u6587\u4EF6\uFF1A%s
saveButton = \u5BFC\u51FA\u771F\u503C\u8868
saveErrorTitle = \u4FDD\u5B58\u6587\u4EF6\u51FA\u9519
#
# gui/ExpressionTab.java
#
cantImportFormatError = \u65E0\u6CD5\u5BFC\u5165\u8BE5\u7C7B\u578B\u7684\u6570\u636E
outputExpressionEdit = \u8F93\u51FA\u8868\u8FBE\u5F0F\uFF08\u53CC\u51FB\u4FEE\u6539\uFF09\uFF1A
#
# gui/ImportTableButton.java
#
cantReadMessage = \u65E0\u6CD5\u8BFB\u53D6\u6587\u4EF6\uFF1A%s
DoNotKnowHowto = \u672A\u5B9A\u4E49\u8BFB\u5199\u6587\u4EF6 '%s' \u7684\u65B9\u5F0F\uFF08\u6269\u5C55\u540D\u5E94\u4E3A .txt \u6216 .csv\uFF09\u3002
openButton = \u5BFC\u5165\u771F\u503C\u8868
openErrorTitle = \u8BFB\u53D6\u6587\u4EF6\u51FA\u9519
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = \u65E0\u53EF\u7528\u8F93\u5165\u3002
karnaughNoOutputError = \u672A\u9009\u4E2D\u8F93\u51FA\u3002
karnaughTooManyInputsError = \u771F\u503C\u8868\u8F93\u5165\u8FC7\u591A\u3002
NoSelectedKmapGroup = \u672A\u9009\u4E2D\u7EC4\u3002
SelectedKmapGroup = \u9009\u4E2D\u7EC4\uFF1A
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = \u66FF\u4EE3\u903B\u8F91
expressionCalc = \u8BA1\u7B97\u8868\u8FBE\u5F0F
expressionLogicrepresentation = \u903B\u8F91
expressionMathrepresentation = \u7B97\u672F
ExpressionNotation = \u7B26\u53F7\u8868\u793A\uFF1A
expressionProgbitsrepresentation = \u4F4D\u7F16\u7A0B
expressionProgboolsrepresentation = \u5E03\u5C14\u503C\u7F16\u7A0B
KMapLinedStyle = \u7EBF\u886C
KmapNumberedStyle = \u7F16\u53F7
KmapStyle = \u6837\u5F0F\uFF1A
minimizedFormat = \u683C\u5F0F\uFF1A
minimizedProductOfSums = \u548C\u4E4B\u79EF\u8303\u5F0F
minimizedSetButton = \u8BBE\u4E3A\u8868\u8FBE\u5F0F
minimizedSumOfProducts = \u79EF\u4E4B\u548C\u8303\u5F0F
#
# gui/OutputSelector.java
#
outputSelectLabel = \u8F93\u51FA\uFF1A
#
# gui/TableTab.java
#
tableCompact = \u6298\u53E0\u91CD\u590D\u884C
tableExpand = \u663E\u793A\u6240\u6709\u884C
tableNoInputs = \uFF08\u65E0\u8F93\u5165\uFF09
tableNoOutputs = \uFF08\u65E0\u8F93\u51FA\uFF09
tableRowsShown = \u663E\u793A %d \u884C\uFF0C\u603B\u8BA1 %d \u884C
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = \u538B\u7F29\u884C
#
# gui/TableTabClip.java
#
clipPasteEndError = \u526A\u8D34\u677F\u5185\u5BB9\u8D85\u8FC7\u4E86\u771F\u503C\u8868\u7684\u5E95\u90E8\u3002
clipPasteErrorTitle = \u7C98\u8D34\u9519\u8BEF
clipPasteSizeError = \u7C98\u8D34\u533A\u57DF\u5927\u5C0F\u8981\u4E0E\u526A\u8D34\u677F\u5185\u5BB9\u4E00\u81F4\u3002
clipPasteSupportedError = \u526A\u8D34\u677F\u5185\u5BB9\u65E0\u6CD5\u7C98\u8D34\u5230\u7F16\u8F91\u5668\u4E2D\u3002
#
# gui/VariableTab.java
#
inputVariables = \u8F93\u5165\u53D8\u91CF\u96C6
outputVariables = \u8F93\u51FA\u53D8\u91CF\u96C6
variableClickToAdd = \u70B9\u51FB\u6DFB\u52A0\u65B0\u53D8\u91CF
variableDuplicateError = \u540D\u79F0\u4E0E\u73B0\u6709\u53D8\u91CF\u91CD\u590D\u3002
variableMaximumError = \uFF08\u8FBE\u5230\u4E86 %s \u7684\u6700\u5927\u503C\u3002\uFF09
variablePartError = \u540D\u79F0\u4E2D\u4E0D\u80FD\u5305\u542B '%s'\u3002
variableRangeFinalPar = \u8303\u56F4\uFF1ALSB\u7D22\u5F15\u540E\u7F3A\u5C11]\u3002
variableRangeInvalChar = \u8303\u56F4\uFF1A \u95ED\u5408 ] \u540E\u65E0\u6548\u5B57\u7B26\u3002
variableRangeMSBWrong = \u8303\u56F4\uFF1A \u8D77\u59CB [ \u540E\u5E94\u662F\u6570\u5B57\u3002
variableRangeStartPar = \u8303\u56F4\uFF1A \u7F3A\u5C11\u8D77\u59CB [ \u3002
variableRangeWrongLB = \u8303\u56F4\uFF1A MSB\u7D22\u5F15\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8ELSB\u7D22\u5F15\u3002
variableRangeWrongSep = \u8303\u56F4\uFF1A MSB\u7D22\u5F15\u4E0ELSB\u7D22\u5F15\u4E4B\u95F4\u5FC5\u987B\u88AB .. \u5206\u9694
variableStartError = \u540D\u79F0\u5FC5\u987B\u4EE5\u5B57\u6BCD\u5F00\u5934\u3002
#
# model/Entry.java
#
busError = \u7535\u8DEF\u4E2D\u5B58\u5728\u51B2\u7A81\u7684\u8F93\u51FA\u503C\u3002
oscillateError = \u7535\u8DEF\u9707\u8361\u3002
#
# model/Parser.java
#
badVariableName = \u201C%s\u201D\u4E0D\u662F\u4E00\u4E2A\u8F93\u5165\u53D8\u91CF\u3002
implicitAndOperator = (\u9690\u5F0FAND)
invalidCharacterError = \u65E0\u6CD5\u8BC6\u522B\u7684\u5B57\u7B26\uFF1A\u201C%s\u201D
lparenMissingError = \u6CA1\u6709\u5339\u914D\u7684\u5DE6\u62EC\u53F7\u3002
missingBraceError = \u6CA1\u6709\u5339\u914D\u7684\u82B1\u62EC\u53F7\u201C%s\u201D\u3002
missingIdentifierError = \u4E0B\u6807\u524D\u7F3A\u5C11\u6807\u8BC6\u7B26\uFF1A\u201C%s\u201D
missingLeftOperandError = \u64CD\u4F5C\u7B26\u201C%s\u201D\u7F3A\u5C11\u5DE6\u64CD\u4F5C\u6570\u3002
missingRightOperandError = \u64CD\u4F5C\u7B26\u201C%s\u201D\u7F3A\u5C11\u53F3\u64CD\u4F5C\u6570\u3002
missingSubscriptError = \u7F3A\u5C11\u4E0B\u6807\uFF1A\u201C%s\u201D
rparenMissingError = \u6CA1\u6709\u5339\u914D\u7684\u53F3\u62EC\u53F7\u3002
unexpectedApostrophe = \u610F\u5916\u7684\u5355\u5F15\u53F7\uFF08\u201C'\u201D\uFF09
unexpectedAssignmentError = \u610F\u5916\u8D4B\u503C\u64CD\u4F5C\u7B26\uFF1A\u201C%s\u201D
#
# model/Var.java
#
badVariableBitFormError = \u53D8\u91CF\u540D\u79F0\u5FC5\u987B\u5177\u5907\u201Cname[i]\u201D\u7684\u5F62\u5F0F
badVariableColonError = \u53D8\u91CF\u540D\u79F0\u5FC5\u987B\u51FA\u73B0\u5728\u201C:\u201D\u4E4B\u524D
badVariableIndexError = \u53D8\u91CF\u7684\u4F4D\u7D22\u5F15\u5FC5\u987B\u4E3A\u6574\u578B
variableFormat = \u53D8\u91CF\u5FC5\u987B\u5177\u5907\u201Cname[N..0]\u201D\u7684\u5F62\u5F0F
variableTooMuchBits = \u53D8\u91CF\u4F4D\u5BBD\u4E0D\u80FD\u5927\u4E8E32


